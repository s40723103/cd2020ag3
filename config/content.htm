<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Group</h1>
<p><span>Repository: </span><a href="https://github.com/s40723103/cd2020">40723103</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723103.github.io/cd2020">40723103</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723110/cd2020">40723110</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723110.github.io/cd2020">40723110</a><span> </span><span>(group leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723112/cd2020">40723112</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723112.github.io/cd2020">40723112</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723120/cd2020">40723120</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723120.github.io/cd2020">40723120</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723125/cd2020">40723125</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723125.github.io/cd2020">40723125</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723126/cd2020">40723126</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723126.github.io/cd2020">40723126</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723128/cd2020">40723128</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723128.github.io/cd2020">40723128</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723130/cd2020">40723130</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723130.github.io/cd2020">40723130</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723139/cd2020">40723139</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723139.github.io/cd2020">40723139</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723142/cd2020">40723142</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723142.github.io/cd2020">40723142</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723145/cd2020">40723145</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723145.github.io/cd2020">40723145</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723146/cd2020">40723146</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723146.github.io/cd2020">40723146</a></p>
<h1>WEEK</h1>
<p>每周都要交進度</p>
<h2>week 3</h2>
<p><span style="color: #ffff99; background-color: #333333;">taskleader :40723145 40723126 40723142</span><br/><span style="color: #ffff99; background-color: #333333;">      Describe how to do an efficient random grouping for this course or do the roll calling randomly?</span></p>
<p><br/><span style="color: #ffff99; background-color: #333333;">taskleader :40723110 40723112 40723130</span><br/><span style="color: #ffff99; background-color: #333333;">      Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github?</span></p>
<p><br/><span style="color: #ffff99; background-color: #333333;">taskleader :40723125 40723103 40723120 40723146</span><br/><span style="color: #ffff99; background-color: #333333;">       What do you need to know from http://www.coppeliarobotics.com/helpFiles/index.html to implement a four-wheeled robot?</span></p>
<h3>CoppeliaSim</h3>
<p><a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a></p>
<h4 style="text-align: left;"><strong>分工</strong></h4>
<p><strong><img alt="" height="359" src="/images/分工01.png" width="319"/></strong></p>
<h1>Assignment</h1>
<h2>assignment 1</h2>
<p>1.</p>
<p></p>
<p>2.</p>
<p>3.<strong></strong></p>
<p><a href="http://coppeliarobotics.com/">CoppeliaSim</a>高度可定制的模擬器，可以自定義模擬的每個方面。此外模擬器本身可以進行定制，以使性能完全符合要求。</p>
<p>這可以通過精心設計的應用程序編程接口（API）來實現。</p>
<p>支持六種不同的編程或編碼方法，每種方法都具有相對於其他方法的特殊優點（顯然還有缺點），但所有六種方法都是相互兼容的（即可以同時使用，甚至可以協同使用）。</p>
<h4></h4>